{"version":3,"sources":["components/Page.js","components/Content.js","components/Sidebar.js","components/SideBarItem.js","components/Chart.js","DragDropSidebar.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","PageContent","styled","div","Page","children","Content","Sidebar","Outer","SidebarItem","type","ports","properties","draggable","onDragStart","event","dataTransfer","setData","REACT_FLOW_CHART","JSON","stringify","chartSimple","offset","x","y","nodes","node1","id","position","port1","value","node2","links","link1","from","nodeId","portId","to","selected","hovered","Message","DragAndDropSidebar","initialValue","config","snapToGrid","port2","custom","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wqBAGA,IAAMA,EAAcC,4BAAH,KAeXC,EAAcC,UAAOC,IAAV,KAQJC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,gBAACJ,EAAD,KACGI,EACD,gBAACN,EAAD,Q,4JC3BG,IAAMO,EAAUJ,UAAOC,IAAV,K,4KCAb,IAAMI,EAAUL,UAAOC,IAAV,K,yJCEpB,IAAMK,EAAQN,UAAOC,IAAV,KAcEM,EAAc,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAQC,EAAiB,EAAjBA,WAC1C,OACE,gBAACJ,EAAD,CACEK,WAAW,EACXC,YAAc,SAACC,GACbA,EAAMC,aAAaC,QAAQC,mBAAkBC,KAAKC,UAAU,CAAEV,OAAMC,QAAQC,kBAG7EF,IC1BMW,EAAc,CACvBC,OAAQ,CACNC,EAAG,EACHC,EAAG,GAELC,MAAO,CACLC,MAAO,CACLC,GAAI,QACJjB,KAAM,cACNkB,SAAU,CACRL,EAAG,IACHC,EAAG,KAELb,MAAO,CACLkB,MAAO,CACLF,GAAI,QACJjB,KAAM,SACNE,WAAY,CACVkB,MAAO,UAKfC,MAAO,CACLJ,GAAI,QACJjB,KAAM,MACNkB,SAAU,CACRL,EAAG,IACHC,EAAG,KAELb,MAAO,CACLkB,MAAO,CACLF,GAAI,QACJjB,KAAM,YAKdsB,MAAO,CACLC,MAAO,CACLN,GAAI,QACJO,KAAM,CACJC,OAAQ,QACRC,OAAQ,SAEVC,GAAI,CACFF,OAAQ,QACRC,OAAQ,WAIdE,SAAU,GACVC,QAAS,I,qIC3Cb,IAAMC,EAAUtC,UAAOC,IAAV,KAMAsC,EAAqB,kBAChC,gBAAC,EAAD,KACE,gBAACnC,EAAD,KACE,gBAAC,qBAAD,CACEoC,aAAcrB,EACdsB,OAAQ,CACJC,YAAY,MAIpB,gBAACrC,EAAD,KACE,gBAACiC,EAAD,gBAGA,gBAAC,EAAD,CACE9B,KAAK,QACLC,MAAQ,CACNkB,MAAO,CACLF,GAAI,QACJjB,KAAM,SAERmC,MAAO,CACLlB,GAAI,QACJjB,KAAM,aAIZ,gBAAC,EAAD,CACEA,KAAK,0BACLC,MAAQ,CACNkB,MAAO,CACLF,GAAI,QACJjB,KAAM,QACNE,WAAY,CACVkC,OAAQ,aAGZD,MAAO,CACLlB,GAAI,QACJjB,KAAM,SACNE,WAAY,CACVkC,OAAQ,gBAKhB,gBAACN,EAAD,gBAGA,gBAAC,EAAD,CACE9B,KAAK,aACLC,MAAQ,CACNkB,MAAO,CACLF,GAAI,QACJjB,KAAM,SAERmC,MAAO,CACLlB,GAAI,QACJjB,KAAM,aAIZ,gBAAC8B,EAAD,cAGA,gBAAC,EAAD,CACE9B,KAAK,oBACLC,MAAQ,CACNkB,MAAO,CACLF,GAAI,QACJjB,KAAM,SAERmC,MAAO,CACLlB,GAAI,QACJjB,KAAM,aAIZ,gBAAC,EAAD,CACEA,KAAK,gBACLC,MAAQ,CACNkB,MAAO,CACLF,GAAI,QACJjB,KAAM,SAERmC,MAAO,CACLlB,GAAI,QACJjB,KAAM,gBClFHqC,MAdf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCLNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.665e1ae6.chunk.js","sourcesContent":["import * as React from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    max-width: 100vw;\n    max-height: 100vh;\n    overflow: hidden;\n    box-sizing: border-box;\n    font-family: sans-serif;\n  }\n\n  *, :after, :before {\n    box-sizing: inherit;\n  }\n`\n\nconst PageContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  max-width: 100vw;\n  max-height: 100vh;\n`\n\nexport const Page = ({ children }: { children: any}) => (\n  <PageContent>\n    {children}\n    <GlobalStyle />\n  </PageContent>\n)\n","import styled from 'styled-components'\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: hidden;\n`\n","import styled from 'styled-components'\n\nexport const Sidebar = styled.div`\n  width: 300px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;`","import * as React from 'react'\nimport styled from 'styled-components'\nimport { REACT_FLOW_CHART } from '@mrblenny/react-flow-chart'\n\nconst Outer = styled.div`\n  padding: 20px 30px;\n  font-size: 14px;\n  background: white;\n  cursor: move;\n`\n\n// var ISidebarItemProps = {\n//   type: String,\n//   ports: INode['ports']\n//   ,\n//   properties: any\n// }\n\nexport const SidebarItem = ({ type, ports , properties }) => {\n  return (\n    <Outer\n      draggable={true}\n      onDragStart={ (event) => {\n        event.dataTransfer.setData(REACT_FLOW_CHART, JSON.stringify({ type, ports , properties }))\n      } }\n    >\n      {type}\n    </Outer>\n  )\n}","export const chartSimple = {\n    offset: {\n      x: 0,\n      y: 0\n    },\n    nodes: {\n      node1: {\n        id: \"node1\",\n        type: \"output-only\",\n        position: {\n          x: 400,\n          y: 100\n        },\n        ports: {\n          port1: {\n            id: \"port1\",\n            type: \"output\",\n            properties: {\n              value: \"yes\"\n            }\n          }\n        }\n      },\n      node2: {\n        id: \"node2\",\n        type: \"End\",\n        position: {\n          x: 400,\n          y: 300\n        },\n        ports: {\n          port1: {\n            id: \"port1\",\n            type: \"input\"\n          }\n        }\n      }\n    },\n    links: {\n      link1: {\n        id: \"link1\",\n        from: {\n          nodeId: \"node1\",\n          portId: \"port1\"\n        },\n        to: {\n          nodeId: \"node2\",\n          portId: \"port1\"\n        },\n      },\n    },\n    selected: {},\n    hovered: {}\n  };","import * as React from 'react'\nimport styled from 'styled-components'\nimport { FlowChartWithState } from '@mrblenny/react-flow-chart'\nimport { Content } from './components/Content'\nimport { Page } from './components/Page'\nimport { Sidebar } from './components/Sidebar'\nimport { SidebarItem } from './components/SideBarItem'\nimport { chartSimple } from './components/Chart'\n\nconst Message = styled.div`\nmargin: 10px;\npadding: 10px;\nbackground: rgba(0,0,0,0.05);\n`\n\nexport const DragAndDropSidebar = () => (\n  <Page>\n    <Content>\n      <FlowChartWithState \n        initialValue={chartSimple} \n        config={{\n            snapToGrid: true,\n          }}\n        />\n    </Content>\n    <Sidebar>\n      <Message>\n        Actions\n      </Message>\n      <SidebarItem\n        type=\"Email\"\n        ports={ {\n          port1: {\n            id: 'port1',\n            type: 'input'\n          },\n          port2: {\n            id: 'port2',\n            type: 'output'\n          },\n        }}        \n      />\n      <SidebarItem\n        type=\"Update Profile Property\"\n        ports={ {\n          port1: {\n            id: 'port1',\n            type: 'input',\n            properties: {\n              custom: 'property',\n            },\n          },\n          port2: {\n            id: 'port2',\n            type: 'output',\n            properties: {\n              custom: 'property',\n            },\n          },\n        }}        \n      />\n      <Message>\n        Timming\n      </Message>\n      <SidebarItem\n        type=\"Time Delay\"\n        ports={ {\n          port1: {\n            id: 'port1',\n            type: 'input'\n          },\n          port2: {\n            id: 'port2',\n            type: 'output'\n          },\n        }}        \n      />\n      <Message>\n        Logic\n      </Message>\n      <SidebarItem\n        type=\"Conditional split\"\n        ports={ {\n          port1: {\n            id: 'port1',\n            type: 'input'\n          },\n          port2: {\n            id: 'port2',\n            type: 'output'\n          },\n        }}        \n      />\n      <SidebarItem\n        type=\"Trigger Split\"\n        ports={ {\n          port1: {\n            id: 'port1',\n            type: 'input'\n          },\n          port2: {\n            id: 'port2',\n            type: 'output'\n          },\n        }}        \n      />\n    </Sidebar>\n  </Page>\n)\n","import React from 'react';\n//import { FlowChartWithState } from \"@mrblenny/react-flow-chart\";\nimport { Page } from './components/Page'\n//import { chartSimple } from './components/Chart'\nimport { DragAndDropSidebar } from './DragDropSidebar'\n\nfunction App() {\n  return (\n    <Page>\n      <DragAndDropSidebar/>\n      {/* <FlowChartWithState \n          initialValue={chartSimple}\n          config={{\n            snapToGrid: true,\n          }}\n      /> */}\n    </Page>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}