{"version":3,"sources":["components/Page.js","components/Content.js","components/Sidebar.js","components/SideBarItem.js","components/Chart.js","DragDropSidebar.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","PageContent","styled","div","Page","children","Content","Sidebar","Outer","SidebarItem","type","ports","properties","bg","style","background","draggable","onDragStart","event","dataTransfer","setData","REACT_FLOW_CHART","JSON","stringify","className","icon","faClock","chartSimple","offset","x","y","nodes","node1","id","position","port1","value","node2","links","link1","from","nodeId","portId","to","selected","hovered","Message","DragAndDropSidebar","initialValue","config","snapToGrid","port2","custom","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6rBAGA,IAAMA,EAAcC,4BAAH,KAeXC,EAAcC,UAAOC,IAAV,KAQJC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,gBAACJ,EAAD,KACGI,EACD,gBAACN,EAAD,Q,4JC3BG,IAAMO,EAAUJ,UAAOC,IAAV,K,qeCAb,IAAMI,EAAUL,UAAOC,IAAV,K,ycCKpB,IAAMK,EAAQN,UAAOC,IAAV,KA+BEM,EAAc,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAQC,EAAqB,EAArBA,WAAaC,EAAQ,EAARA,GAEvD,OACE,gBAACL,EAAD,CACEM,MAAO,CAACC,WAAYF,GACpBG,WAAW,EACXC,YAAc,SAACC,GACbA,EAAMC,aAAaC,QAAQC,mBAAkBC,KAAKC,UAAU,CAAEb,OAAMC,QAAQC,kBAGhF,uBAAKY,UAAU,kBACb,gBAAC,IAAD,CACEA,UAAU,UACVC,KAAMC,MAEPhB,KCrDMiB,EAAc,CACvBC,OAAQ,CACNC,EAAG,EACHC,EAAG,GAELC,MAAO,CACLC,MAAO,CACLC,GAAI,QACJvB,KAAM,cACNwB,SAAU,CACRL,EAAG,IACHC,EAAG,KAELnB,MAAO,CACLwB,MAAO,CACLF,GAAI,QACJvB,KAAM,SACNE,WAAY,CACVwB,MAAO,UAKfC,MAAO,CACLJ,GAAI,QACJvB,KAAM,MACNwB,SAAU,CACRL,EAAG,IACHC,EAAG,KAELnB,MAAO,CACLwB,MAAO,CACLF,GAAI,QACJvB,KAAM,YAKd4B,MAAO,CACLC,MAAO,CACLN,GAAI,QACJO,KAAM,CACJC,OAAQ,QACRC,OAAQ,SAEVC,GAAI,CACFF,OAAQ,QACRC,OAAQ,WAIdE,SAAU,GACVC,QAAS,I,uPC3Cb,IAAMC,EAAU5C,UAAOC,IAAV,KAUA4C,EAAqB,kBAChC,gBAAC,EAAD,KACE,gBAACzC,EAAD,KACE,gBAAC,qBAAD,CACE0C,aAAcrB,EACdsB,OAAQ,CACJC,YAAY,MAIpB,gBAAC3C,EAAD,KACE,gBAACuC,EAAD,gBAGA,gBAAC,EAAD,CACEjC,GAAG,QACHH,KAAK,QACLC,MAAQ,CACNwB,MAAO,CACLF,GAAI,QACJvB,KAAM,SAERyC,MAAO,CACLlB,GAAI,QACJvB,KAAM,aAIZ,gBAAC,EAAD,CACEG,GAAG,QACHH,KAAK,0BACLC,MAAQ,CACNwB,MAAO,CACLF,GAAI,QACJvB,KAAM,QACNE,WAAY,CACVwC,OAAQ,aAGZD,MAAO,CACLlB,GAAI,QACJvB,KAAM,SACNE,WAAY,CACVwC,OAAQ,gBAKhB,gBAACN,EAAD,gBAGA,gBAAC,EAAD,CACEjC,GAAG,UACHH,KAAK,aACLC,MAAQ,CACNwB,MAAO,CACLF,GAAI,QACJvB,KAAM,SAERyC,MAAO,CACLlB,GAAI,QACJvB,KAAM,aAIZ,gBAACoC,EAAD,cAGA,gBAAC,EAAD,CACEjC,GAAG,UACHH,KAAK,oBACLC,MAAQ,CACNwB,MAAO,CACLF,GAAI,QACJvB,KAAM,SAERyC,MAAO,CACLlB,GAAI,QACJvB,KAAM,aAIZ,gBAAC,EAAD,CACEG,GAAG,UACHH,KAAK,gBACLC,MAAQ,CACNwB,MAAO,CACLF,GAAI,QACJvB,KAAM,SAERyC,MAAO,CACLlB,GAAI,QACJvB,KAAM,gBC3FH2C,MAdf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCLNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a80c2834.chunk.js","sourcesContent":["import * as React from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    max-width: 100vw;\n    max-height: 100vh;\n    overflow: hidden;\n    box-sizing: border-box;\n    font-family: sans-serif;\n  }\n\n  *, :after, :before {\n    box-sizing: inherit;\n  }\n`\n\nconst PageContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  max-width: 100vw;\n  max-height: 100vh;\n`\n\nexport const Page = ({ children }: { children: any}) => (\n  <PageContent>\n    {children}\n    <GlobalStyle />\n  </PageContent>\n)\n","import styled from 'styled-components'\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: hidden;\n`\n","import styled from 'styled-components'\n\nexport const Sidebar = styled.div`\n    order: -1;\n    overflow-y: auto;\n    flex: 0 0 350px;\n    padding: 32px;\n    background: #FFF;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    margin-block-start: 1em;\n    margin-block-end: 1em;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n    padding-inline-start: 40px;\n    font-family: proxima-nova,Lato,\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n`","import * as React from 'react'\nimport styled from 'styled-components'\nimport { REACT_FLOW_CHART } from '@mrblenny/react-flow-chart'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope , faUser , faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport  styles from '../style.css';\n\nconst Outer = styled.div`\n  background: #FFF;\n  width: 279px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: row;\n  margin: 8px 0 0 0;\n  box-sizing: border-box;\n  border: 1px solid #BAC2CA;\n  border-radius: 4px;\n  color: #606A72;\n  transition: background-color .25s ease-out,color .25s ease-out;\n  text-align: center;\n`\n\n// `\n//   padding: 20px 30px;\n//   font-size: 14px;\n//   background: white;\n//   cursor: move;\n// `\n\n// var ISidebarItemProps = {\n//   type: String,\n//   ports: INode['ports']\n//   ,\n//   properties: any\n// }\n\nexport const SidebarItem = ({ type, ports , properties , bg}) => {\n // console.log(faEnvelope)\n  return (\n    <Outer\n      style={{background: bg}}\n      draggable={true}\n      onDragStart={ (event) => {\n        event.dataTransfer.setData(REACT_FLOW_CHART, JSON.stringify({ type, ports , properties }))\n      } }\n    >\n    <div className=\"icon-container\" >\n      <FontAwesomeIcon \n        className=\"icon-bg\" \n        icon={faClock}\n      />\n      {type}\n    </div>\n    </Outer>\n  )\n}","export const chartSimple = {\n    offset: {\n      x: 0,\n      y: 0\n    },\n    nodes: {\n      node1: {\n        id: \"node1\",\n        type: \"output-only\",\n        position: {\n          x: 400,\n          y: 100\n        },\n        ports: {\n          port1: {\n            id: \"port1\",\n            type: \"output\",\n            properties: {\n              value: \"yes\"\n            }\n          }\n        }\n      },\n      node2: {\n        id: \"node2\",\n        type: \"End\",\n        position: {\n          x: 400,\n          y: 300\n        },\n        ports: {\n          port1: {\n            id: \"port1\",\n            type: \"input\"\n          }\n        }\n      }\n    },\n    links: {\n      link1: {\n        id: \"link1\",\n        from: {\n          nodeId: \"node1\",\n          portId: \"port1\"\n        },\n        to: {\n          nodeId: \"node2\",\n          portId: \"port1\"\n        },\n      },\n    },\n    selected: {},\n    hovered: {}\n  };","import * as React from 'react'\nimport styled from 'styled-components'\nimport { FlowChartWithState } from '@mrblenny/react-flow-chart'\nimport { Content } from './components/Content'\nimport { Page } from './components/Page'\nimport { Sidebar } from './components/Sidebar'\nimport { SidebarItem } from './components/SideBarItem'\nimport { chartSimple } from './components/Chart'\n\nconst Message = styled.div`\n    letter-spacing: .5px;\n    text-transform: uppercase;\n    font-size: 14px;\n    line-height: 14px;\n    font-weight: 600;\n    color: #606A72;\n    margin: 32px 0 8px 0;\n`\n\nexport const DragAndDropSidebar = () => (\n  <Page>\n    <Content>\n      <FlowChartWithState \n        initialValue={chartSimple} \n        config={{\n            snapToGrid: true,\n          }}\n        />\n    </Content>\n    <Sidebar>\n      <Message>\n        Actions\n      </Message>\n      <SidebarItem\n        bg=\"white\"\n        type=\"Email\"\n        ports={ {\n          port1: {\n            id: 'port1',\n            type: 'input'\n          },\n          port2: {\n            id: 'port2',\n            type: 'output'\n          }\n        }}        \n      />\n      <SidebarItem\n        bg=\"white\"\n        type=\"Update Profile Property\"\n        ports={ {\n          port1: {\n            id: 'port1',\n            type: 'input',\n            properties: {\n              custom: 'property',\n            },\n          },\n          port2: {\n            id: 'port2',\n            type: 'output',\n            properties: {\n              custom: 'property',\n            },\n          },\n        }}        \n      />\n      <Message>\n        Timming\n      </Message>\n      <SidebarItem\n        bg=\"#ECF3F5\"\n        type=\"Time Delay\"\n        ports={ {\n          port1: {\n            id: 'port1',\n            type: 'input'\n          },\n          port2: {\n            id: 'port2',\n            type: 'output'\n          },\n        }}        \n      />\n      <Message>\n        Logic\n      </Message>\n      <SidebarItem\n        bg=\"#D9E0E7\"\n        type=\"Conditional split\"\n        ports={ {\n          port1: {\n            id: 'port1',\n            type: 'input'\n          },\n          port2: {\n            id: 'port2',\n            type: 'output'\n          },\n        }}        \n      />\n      <SidebarItem\n        bg=\"#D9E0E7\"\n        type=\"Trigger Split\"\n        ports={ {\n          port1: {\n            id: 'port1',\n            type: 'input'\n          },\n          port2: {\n            id: 'port2',\n            type: 'output'\n          },\n        }}        \n      />\n    </Sidebar>\n  </Page>\n)\n","import React from 'react';\n//import { FlowChartWithState } from \"@mrblenny/react-flow-chart\";\nimport { Page } from './components/Page'\n//import { chartSimple } from './components/Chart'\nimport { DragAndDropSidebar } from './DragDropSidebar'\n\nfunction App() {\n  return (\n    <Page>\n      <DragAndDropSidebar/>\n      {/* <FlowChartWithState \n          initialValue={chartSimple}\n          config={{\n            snapToGrid: true,\n          }}\n      /> */}\n    </Page>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}